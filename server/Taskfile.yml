version: '3'

tasks:
  check:
    desc: Check for errors
    cmds:
      - go vet
      - mkdir -p build
      - gofmt -l . > build/fmt.txt
      - cmd: if ! [ -z $(cat build/fmt.txt) ]; then echo 'Run `go fmt` to format the following files:'; cat build/fmt.txt; exit 1; fi
        silent: true

  fix:
    desc: Fix errors
    cmds:
      - go fmt

  build:
    desc: Build the server executable
    cmds:
      - mkdir -p build
      - go build -o build/iconss

  dev:
    desc: Run the server in watch mode
    env:
      ICONSS_LOG: info
      ICONSS_PORT: "8000"
      ICONSS_APP_PATH: ../client/dist
      ICONSS_ICON_PATH: ../img
    cmds:
      - cargo watch -C . -s 'go run .'

  ######################################
  # Container Local Testing
  ######################################

  pull:
    desc: Pull the latest build artifact from GitHub
    dotenv:
      - .env
    cmds:
      - magnesis -o dist
      - cp -r ../img dist

  container:
    desc: Build the Docker container
    cmds:
      - docker build -t pistonite/icons .

  run:
    desc: Run the Docker container
    cmds:
      - docker run -p 8000:80 pistonite/icons:latest

  connect:
    desc: Connect to the running Docker container
    cmds:
      - docker exec -it $(docker container ls -q --filter ancestor=pistonite/icons) /bin/sh

  stop:
    desc: Stop the running Docker container
    cmds:
      - docker stop $(docker ps -q -a --filter ancestor=pistonite/icons)

  clean:
    desc: Clean the containers
    cmds:
      - docker container prune
      - docker image rm $(docker image ls -q -a --filter reference=pistonite/icons)
